[libconfig]
libdir_tag = /util/opt/nuwrf/v9/deps/
compiler_vendor = intel
mpi_vendor = openmpi

# Libraries paths
[libpaths]
bufrlib = ${libconfig:libdir_tag}
cairo = ${libconfig:libdir_tag}/
cairo_include = ${cairo}/include
cairo_lib = ${cairo}/lib
esmf_root = ${libconfig:libdir_tag}
esmf_mpi_lib = ${esmf_root}/lib/libO/Linux.${libconfig:compiler_vendor}.64.${libconfig:mpi_vendor}.default
esmf_mpi_mod = ${esmf_root}/mod/modO/Linux.${libconfig:compiler_vendor}.64.${libconfig:mpi_vendor}.default
esmf_root_nompi = ${libconfig:libdir_tag}/esmf.mpiuni
esmf_nompi_lib = ${esmf_root_nompi}/lib/libO/Linux.${libconfig:compiler_vendor}.64.mpiuni.default
esmf_nompi_mod = ${esmf_root_nompi}/mod/modO/Linux.${libconfig:compiler_vendor}.64.mpiuni.default
fortrangis = ${libconfig:libdir_tag}/fortrangis
freetype = ${libconfig:libdir_tag}
freetype_include = ${freetype}/include/freetype
freetype_lib = ${freetype}/lib
g2clib = ${libconfig:libdir_tag}
gdal = ${libconfig:libdir_tag}
ghostscript = ${libconfig:libdir_tag}
gribapi = ${libconfig:libdir_tag}
gribapi_include = ${gribapi}/include
gribapi_lib = ${gribapi}/lib
gsl = ${libconfig:libdir_tag}
hdf4 = ${libconfig:libdir_tag}
hdf4_path = ${hdf4}
hdf4_include = ${hdf4}/include
hdf4_lib = ${hdf4}/lib
hdf5 = ${libconfig:libdir_tag}
hdf5_path = ${hdf5}
hdf5_include = ${hdf5}/include
hdf5_lib = ${hdf5}/lib
hdfeos = ${libconfig:libdir_tag}
hdfeos_path = ${hdfeos}
hdfeos_include = ${hdfeos}/include
hdfeos_lib = ${hdfeos}/lib
jasper = ${libconfig:libdir_tag}
jpeg = ${libconfig:libdir_tag}
png = ${libconfig:libdir_tag}
ncarg_root = ${libconfig:libdir_tag}/ncarg
# NetCDF4 with HDF5 compression
netcdf_4 = ${libconfig:libdir_tag}
netcdf_4_include = ${netcdf_4}/include
netcdf_4_lib = ${netcdf_4}/lib
# Generic aliases for netCDF.  Uses netCDF4.
netcdf = ${netcdf_4}
netcdf_include = ${netcdf_4_include}
netcdf_lib = ${netcdf_4_lib}
netcdf4 = 1
pixman = ${libconfig:libdir_tag}
zlib = ${libconfig:libdir_tag}
zlib_include = ${zlib}/include
zlib_lib = ${zlib}/lib
# BOXMGLIBDIR is used by WRF electrification scheme
# Note: Only works with intel-intelmpi combination 
boxmglibdir=${libconfig:libdir_tag}/boxmg

[wrfconfig]
# Parallel make
j = -j 2
wrf_use_mpi = 1
wrf_skip_clm4 = 1
# Allow large (> 2 Gb netCDF files)
wrfio_ncd_large_file_support = 1
# ESMF Library for WRFV3                                                      
wrf_esmf_libs_mpi = -L${libpaths:esmf_mpi_lib} -lesmf -lstdc++ -lrt
wrf_esmf_libs_nompi = -L${libpaths:esmf_nompi_lib} -lesmf -lstdc++ -lrt
# ZLIB library for WRFV3 (required by LIS)                                     
wrf_zlib_libs = -L${libpaths:zlib_lib} -lz
# GRIBAPI library for WRFV3 (required by LIS 7)                           
wrf_gribapi_libs = -L${libpaths:gribapi_lib} -lgrib_api_f90 -lgrib_api
# Need yacc and flex for KPP.
yacc = /usr/bin/yacc -d
flex_lib_dir = /usr/lib64
wrf_configure_mpi_opt_gnu-sgimpt = 82
wrf_configure_mpi_opt_gnu-mvapich2 = 90
wrf_configure_mpi_opt_gnu-openmpi = 86
wrf_configure_mpi_opt_intel-intelmpi = 74
wrf_configure_nompi_opt_intel-intelmpi = 72
#wrf_configure_mpi_opt_intel-sgimpt = 78
wrf_configure_lis_mpi_gnu-sgimpt = configure.lis.linux_gfortran.nuwrf_mpi
wrf_configure_lis_mpi_gnu-mvapich2 = configure.lis.linux_gfortran.nuwrf_mpi
wrf_configure_lis_mpi_gnu-openmpi = configure.lis.linux_gfortran.nuwrf_mpi
wrf_configure_lis_mpi_intel-intelmpi = configure.lis.linux_ifc.nuwrf_mpi
wrf_configure_lis_nompi_intel-intelmpi = configure.lis.linux_ifc.nuwrf_nompi
#wrf_configure_lis_mpi_intel-sgimpt = configure.lis.linux_ifc.nuwrf_mpi
lis_arch_intel-intelmpi = linux_ifc
#lis_arch_intel-sgimpt = linux_ifc
lis_arch_gnu-sgimpt = linux_gfortran

wrf_debug_cflags_local_intel = -g -O0
wrf_debug_fcoptim_intel = -CB -fpe0 -check uninit -ftrapuv
wrf_debug_fcnoopt_intel = -CB -fpe0 -check uninit -ftrapuv
wrf_debug_lis_cflags_intel = -g -O0 ${wrf_debug_cflags_local_intel}
wrf_debug_lis_fflags77_intel = -g -O0 ${wrf_debug_fcoptim_intel}
wrf_debug_lis_fflags_intel = -g -O0 ${wrf_debug_fcnoopt_intel}

wrf_debug_cflags_local_gnu = -g -O0
wrf_debug_fcoptim_gnu = -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow
wrf_debug_fcnoopt_gnu = -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow
wrf_debug_lis_cflags_gnu = -g -O0
wrf_debug_lis_fflags77_gnu = -g -O0 ${wrf_debug_fcoptim_gnu}
wrf_debug_lis_fflags_gnu = -g -O0 ${wrf_debug_fcnoopt_gnu}
# WRF electrification scheme is OFF by default
# Note: Only works with intel-intelmpi combination
wrf_elec = 0

lis_fc = mpif90
lis_cc = mpicc
lis_fc_nompi = ifort
lis_cc_nompi = icc
lis_modesmf = ${libpaths:esmf_mpi_mod}
lis_libesmf = ${libpaths:esmf_mpi_lib}
lis_gribapi = ${libpaths:gribapi}
lis_jasper = ${libpaths:jasper}
lis_netcdf = ${libpaths:netcdf}
lis_hdf4 = ${libpaths:hdf4}
lis_hdf5 = ${libpaths:hdf5}
lis_hdfeos = ${libpaths:hdfeos}

[wpsconfig]
wps_use_mpi = 1
# Configure options for WPS
wps_configure_mpi_opt_gnu = 51
wps_configure_mpi_opt_intel = 47
# GRIB2 libraries (Jasper, PNG, and ZLIB) for WPS
wps_grib2_libs = ${libpaths:jasper}/lib -L${libpaths:png}/lib -L${libpaths:zlib}/lib
wps_grib2_inc = ${libpaths:jasper}/include -I${libpaths:png}/include -I${libpaths:zlib_include}

# Compiler debug flags
wps_debug_cflags_intel = -g -O0 -w -check=conversions,stack,uninit -debug
wps_debug_cflags_gnu = -g -O0 
wps_debug_fflags_intel = -g -O0 -w -convert big_endian -check bounds,pointers,stack,uninit -debug -FR
wps_debug_f77flags_intel = -g -O0 -w -convert big_endian -check bounds,pointers,stack,uninit -debug -FI
wps_debug_fflags_gnu = -g -O0 -fconvert=big-endian -fbounds-check -ffpe-trap=invalid,zero,overflow
wps_debug_f77flags_gnu = -g -O0 -fconvert=big-endian -fbounds-check -ffpe-trap=invalid,zero,overflow -ffixed-form 

[uppconfig]
# Flag to compile UPP with MPI.  Required in NU-WRF.
upp_use_mpi = 1
# Configure options for UPP.
upp_configure_mpi_opt_gnu = 20
upp_configure_mpi_opt_intel = 18
# GRIB2 libraries (Jasper, PNG, and ZLIB) for UPP
upp_grib2_libs = ${libpaths:jasper}/lib -L${libpaths:png}/lib -L${libpaths:zlib_lib}
upp_grib2_inc = ${libpaths:jasper}/include -I${libpaths:png}/include -I${libpaths:zlib_include}
# GRIB_API library 
upp_grib_api_lib = -L${libpaths:gribapi_lib} -lgrib_api_f90 -lgrib_api

[ripconfig]
rip_configure_opt_gnu = 3
rip_configure_opt_intel = 5

[arwpostconfig]
arwpost_configure_opt_gnu = 5
arwpost_configure_opt_intel = 4

[metconfig]
met_bufr = ${libpaths:bufrlib}
met_bufrinc = ${libpaths:bufrlib}/include
met_bufrlib = ${libpaths:bufrlib}/lib
met_cairo = ${libpaths:cairo}
met_cairoinc = ${libpaths:cairo_include}
met_cairolib = ${libpaths:cairo_lib} -L${libpaths:pixman}/lib -L${libpaths:png}/lib
met_font_dir = ${libpaths:ghostscript}
met_freetype = ${libpaths:freetype}
met_freetypeinc = ${libpaths:freetype_include}
met_freetypelib = ${libpaths:freetype_lib}
met_grib2c = ${libpaths:g2clib}
met_grib2cinc = ${libpaths:g2clib}/include
met_grib2clib = ${libpaths:g2clib}/lib -L${libpaths:jasper}/lib -L${libpaths:png}/lib -L${libpaths:zlib_lib}
met_gsl = ${libpaths:gsl}
met_gslinc = ${libpaths:gsl}/include
met_gsllib = ${libpaths:gsl}/lib
met_hdf = ${libpaths:hdf4}
met_hdfinc = ${libpaths:hdf4_include}
met_hdflib = ${libpaths:hdf4_lib}
met_hdf5 = ${libpaths:hdf5}
met_hdf5inc = ${libpaths:hdf5_include}
met_hdf5lib = ${libpaths:hdf5_lib}
met_hdfeos = ${libpaths:hdfeos}
met_hdfeosinc = ${libpaths:hdfeos_include}
met_hdfeoslib = ${libpaths:hdfeos_lib}
met_netcdf = ${libpaths:netcdf_4}
met_netcdfinc = ${met_netcdf}/include
met_netcdflib = ${met_netcdf}/lib -L${libpaths:hdf5_lib} -L${libpaths:zlib_lib}

[gsdsuconfig]
gsdsu_makefile_gnu = makefile.nuwrf.gfortran
gsdsu_makefile_intel = makefile.nuwrf.ifort
gsdsu_netcdf_incdir = ${libpaths:netcdf_4_include}
gsdsu_netcdf_libdir = ${libpaths:netcdf_4_lib}
gsdsu_netcdf4_dep_lib = -L${libpaths:hdf5_lib} -L${libpaths:zlib_lib} -lhdf5_hl -lhdf5 -lz

[ldtconfig]
ldt_arch_gnu = linux_gfortran
ldt_arch_intel = linux_ifc
ldt_fc = mpif90
ldt_cc = mpicc
ldt_gribapi = ${libpaths:gribapi}
ldt_netcdf = ${libpaths:netcdf_4} 
ldt_hdf5 = ${libpaths:hdf5}
ldt_modesmf = ${libpaths:esmf_mpi_mod}
ldt_libesmf = ${libpaths:esmf_mpi_lib}
ldt_jasper = ${libpaths:jasper}
ldt_hdf4 = ${libpaths:hdf4}
ldt_hdfeos = ${libpaths:hdfeos}
ldt_skip_history = 0

[lvtconfig]
# Name of configuration file under the "arch" folder to use for this system.
lvt_arch_configure_file_gnu = configure.lvt.linux_gfortran
lvt_arch_gnu = linux_gfortran
lvt_arch_configure_file_intel = configure.lvt.linux_ifc.discover
lvt_arch_intel = linux_ifc
lvt_netcdf4_dep_lib = -L${libpaths:hdf5_lib} -L${libpaths:zlib_lib} -lhdf5_hl -lhdf5 -lz
lvt_fc = mpif90
lvt_cc = mpicc
lvt_gribapi = ${libpaths:gribapi}
lvt_netcdf = ${libpaths:netcdf_4}
lvt_hdf5 = ${libpaths:hdf5}
lvt_modesmf = ${libpaths:esmf_mpi_mod}
lvt_libesmf = ${libpaths:esmf_mpi_lib}
lvt_jasper = ${libpaths:jasper}
lvt_hdf4 = ${libpaths:hdf4}
lvt_hdfeos = ${libpaths:hdfeos}

