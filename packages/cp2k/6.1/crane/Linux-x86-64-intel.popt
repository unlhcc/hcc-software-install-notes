# by default some intel compilers put temporaries on the stack
# this might lead to segmentation faults is the stack limit is set to low
# stack limits can be increased by sysadmins or e.g with ulimit -s 256000
# furthermore new ifort (10.0?) compilers support the option
# -heap-arrays 64
# add this to the compilation flags is the other options do not work
# The following settings worked for:
# - AMD64 Opteron
# - SUSE Linux Enterprise Server 10.0 (x86_64)
# - Intel(R) Fortran Compiler for Intel(R) EM64T-based applications, Version 10.0.025
# - AMD acml library version 3.6.0
# - MPICH2-1.0.5p4
# - SCALAPACK library          1.8.0
#
#

MPI_HOME = /util/opt/openmpi/2.0/intel/16
INTEL_MKL = /util/comp/intel/15/mkl
INTEL_INC = $(INTEL_MKL)/include/fftw
INTEL_LIB = $(INTEL_MKL)/lib/intel64

CC       = $(MPI_HOME)/bin/mpicc
CPP      =
FC       = $(MPI_HOME)/bin/mpif90
LD       = $(MPI_HOME)/bin/mpif90
AR       = xiar -r
DFLAGS   = -D__INTEL -D__FFTSG -D__parallel -D__BLACS -D__SCALAPACK -D__FFTW3 -D__FFTMKL -D__LIBINT -D__LIBINT_MAX_AM=6 -D__LIBDERIV_MAX_AM1=5
CPPFLAGS = -C -traditional $(DFLAGS) -I$(INTEL_INC) -I$(MPI_HOME)/include
FCFLAGS  = $(DFLAGS) -I$(INTEL_MKL)/include -I$(INTEL_INC) -I$(MPI_HOME)/include -O2  -heap-arrays 64 -unroll -fpp -free -nofor_main
FCFLAGS2 = $(DFLAGS) -I$(INTEL_MKL)/include -I$(INTEL_INC) -I$(MPI_HOME)/include -O2  -heap-arrays 64 -unroll -fpp -free -nofor_main
LDFLAGS  = $(FCFLAGS) -I$(INTEL_INC) -I$(MPI_HOME)/include
LIBS     = -L$(INTEL_LIB) -L$(MPI_HOME)/lib \
           -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lfftw3xf_intel \
           -lmkl_scalapack_lp64 \
           -lmkl_blacs_openmpi_lp64 \
           /util/opt/libint/1.1.4-intel/lib/libderiv.a \
           /util/opt/libint/1.1.4-intel/lib/libint.a \
           -lstdc++

OBJECTS_ARCHITECTURE = machine_intel.o
